[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "recipeai"
version = "0.1.0"
description = "AI-powered recipe generation with nutrition analysis using MCP protocol"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Savitha Raghunathan"}
]
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "langchain>=0.3.27",
    "langchain-openai>=0.3.30",
    "mcp>=1.13.0",
    "pydantic>=2.11.7",
    "tinydb>=4.8.2",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]

[project.scripts]
recipe-ai = "main:main"
recipe-ai-mcp-server = "nutrition_mcp.mcp_server:main"

[project.urls]
Homepage = "https://github.com/yourusername/recipeai"
Repository = "https://github.com/yourusername/recipeai"
Issues = "https://github.com/yourusername/recipeai/issues"

[tool.hatch.build.targets.wheel]
packages = ["src", "nutrition_mcp", "database", "utils"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"